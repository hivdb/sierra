plugins {
    id "org.gradle.java"
    id "org.gradle.eclipse"
    id "org.gradle.jacoco"
}

group = 'edu.stanford.hivdb'
version = '3.5.3'

description = """Sierra Unit Tests"""

sourceCompatibility = 15
targetCompatibility = 15

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':sierra-core')
    implementation project(':hivfacts-java')
    implementation project(':sierra-graphql')
    implementation project(':asi_interpreter')

    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-math3:3.6.1'

    implementation 'commons-cli:commons-cli:1.4'
    implementation 'commons-io:commons-io:2.6'

    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.slf4j:slf4j-api:1.7.29'

    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.google.code.gson:gson-extras:2.8.5'

    implementation 'com.graphql-java:graphql-java:13.0'

    testImplementation 'junit:junit:4.12'

    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    implementation 'org.apache.httpcomponents:httpcore:4.4.12'

    implementation 'com.amazonaws:aws-java-sdk-lambda:1.11.688'

    testImplementation 'org.mockito:mockito-core:3.2.0'
}

ext {
    jacocoReportClasses = []
    rootProject.subprojects.each { project ->
        if (project.name in ["hivfacts-java", "sierra-core"]) {
            jacocoReportClasses.add(project.sourceSets.main.output)
        }
    }
    isTravisBuild = System.getenv().get("TRAVIS") == 'true'
    enableRegressionTest = System.getenv().get("ENABLE_REGRESSION_TEST") == 'true'
}

test {

    if (!enableRegressionTest) {
        exclude '**/*Regression*.class'
        exclude '**/MutationPatternsResistanceJsonComparisonTest.class'
    }

    // testLogging {
    //     showStandardStreams = true
	// 	events "failed"
	// 	exceptionFormat "full"
    // }
}

jacocoTestReport {
    classDirectories.from = files(jacocoReportClasses)
    reports {
        xml.required = true
        html.required = true
    }
}

check.dependsOn jacocoTestReport


// Aligner test tasks
task clearCachable(type: Exec, group: 'Generator', description: 'Clean files created by Cachable.') {
    commandLine 'rm'
    args '-rf', 'src/main/resources/__cached_classes'
}

task updateCachable(type: JavaExec, group: 'Generator', description: 'Generate files with Cachable.') {
    mainClass = 'edu.stanford.hivdb.utilities.Cachable'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'hivdb.updateCachable', """
    """
}

updateCachable.dependsOn classes
updateCachable.dependsOn clearCachable
updateCachable.dependsOn ':utilities:updateCachable'
